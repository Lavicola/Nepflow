openapi: 3.0.0
info:
  description: API for Nepenthes Operations
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Nepflow Nepenthes
  version: 1.0.0
servers:
- url: http://localhost:8080/api
tags:
- description: Operations to manage Nepenthes
  name: NepenthesManagement
paths:
  /location:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationDTO"
        description: LocationdTo with all necessary Attributes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationDTO"
          description: OK
        "500":
          description: Internal Error
      summary: add a new Location
      tags:
      - NepenthesMetadata
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: NepenthesMetadata
  /producer:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProducerDTO"
        description: DTO with all necessary Attributes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProducerDTO"
          description: OK
        "500":
          description: Internal Error
      summary: add a new Producer
      tags:
      - NepenthesMetadata
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: NepenthesMetadata
  /clone/{nepenthesType}:
    get:
      parameters:
      - explode: false
        in: path
        name: nepenthesType
        required: true
        schema:
          $ref: "#/components/schemas/NepenthesType"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  allOf:
                  - $ref: "#/components/schemas/LabelDTO"
                type: array
          description: OK
      summary: get all Nepenthes of a specific Nepenthestype
      tags:
      - nepenthes
      x-accepts:
      - application/json
      x-tags:
      - tag: nepenthes
  /clone/{nepenthesType}/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: nepenthesType
        required: true
        schema:
          $ref: "#/components/schemas/NepenthesType"
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelClonesDTO"
          description: OK
      summary: get all clones of a Nepenthes
      tags:
      - nepenthes
      x-accepts:
      - application/json
      x-tags:
      - tag: nepenthes
  /clone/{nepenthesType}/{cloneType}/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: nepenthesType
        required: true
        schema:
          $ref: "#/components/schemas/NepenthesType"
        style: simple
      - explode: false
        in: path
        name: cloneType
        required: true
        schema:
          $ref: "#/components/schemas/CloneType"
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelClonesDTO"
          description: OK
      summary: get either iv or ic clones of a Nepenthes
      tags:
      - nepenthes
      x-accepts:
      - application/json
      x-tags:
      - tag: nepenthes
    post:
      parameters:
      - explode: false
        in: path
        name: nepenthesType
        required: true
        schema:
          $ref: "#/components/schemas/NepenthesType"
        style: simple
      - explode: false
        in: path
        name: cloneType
        required: true
        schema:
          $ref: "#/components/schemas/CloneType"
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelCloneDTO"
        description: Clone DTO with new values
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelCloneDTO"
          description: OK
      summary: add a new clone to a nepenthes
      tags:
      - nepenthes
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: nepenthes
  /clone/{nepenthesType}/{cloneType}/{name}/{internalCloneId}:
    put:
      parameters:
      - explode: false
        in: path
        name: nepenthesType
        required: true
        schema:
          $ref: "#/components/schemas/NepenthesType"
        style: simple
      - explode: false
        in: path
        name: cloneType
        required: true
        schema:
          $ref: "#/components/schemas/CloneType"
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: internalCloneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelCloneDTO"
          description: OK
      summary: update a Clone
      tags:
      - nepenthes
      x-accepts:
      - application/json
      x-tags:
      - tag: nepenthes
components:
  parameters:
    nepenthesType:
      explode: false
      in: path
      name: nepenthesType
      required: true
      schema:
        $ref: "#/components/schemas/NepenthesType"
      style: simple
    cloneType:
      explode: false
      in: path
      name: cloneType
      required: true
      schema:
        $ref: "#/components/schemas/CloneType"
      style: simple
    name:
      explode: false
      in: path
      name: name
      required: true
      schema:
        type: string
      style: simple
    internalCloneId:
      explode: false
      in: path
      name: internalCloneId
      required: true
      schema:
        type: string
      style: simple
  schemas:
    LocationDTO:
      type: string
    ProducerDTO:
      type: string
    LabelDTO:
      example:
        prefix: prefix
        name: name
      properties:
        name:
          type: string
        prefix:
          type: string
      type: object
    CloneDTO:
      example:
        sex: sex
        producer: producer
        cloneId: cloneId
        internalcloneId: internalcloneId
        grex:
          mother: null
          father: null
          cloneId: cloneId
        Location: Location
      properties:
        cloneId:
          type: string
        internalcloneId:
          type: string
        sex:
          type: string
        grex:
          $ref: "#/components/schemas/CloneGrexDTO"
        producer:
          type: string
        Location:
          type: string
      type: object
    HybridCloneDTO:
      allOf:
      - $ref: "#/components/schemas/CloneDTO"
      - properties:
          fatherName:
            type: string
          motherName:
            type: string
        type: object
    CloneGrexDTO:
      example:
        mother: null
        father: null
        cloneId: cloneId
      properties:
        cloneId:
          type: string
        father:
          $ref: "#/components/schemas/CloneGrexDTO_father"
        mother:
          $ref: "#/components/schemas/CloneGrexDTO_father"
      type: object
    LabelCloneDTO:
      example:
        clone:
          sex: sex
          producer: producer
          cloneId: cloneId
          internalcloneId: internalcloneId
          grex:
            mother: null
            father: null
            cloneId: cloneId
          Location: Location
        label:
          prefix: prefix
          name: name
      properties:
        label:
          $ref: "#/components/schemas/LabelDTO"
        clone:
          $ref: "#/components/schemas/CloneGrexDTO_father"
      type: object
    LabelClonesDTO:
      example:
        clones:
        - sex: sex
          producer: producer
          cloneId: cloneId
          internalcloneId: internalcloneId
          grex:
            mother: null
            father: null
            cloneId: cloneId
          Location: Location
        - sex: sex
          producer: producer
          cloneId: cloneId
          internalcloneId: internalcloneId
          grex:
            mother: null
            father: null
            cloneId: cloneId
          Location: Location
        label:
          prefix: prefix
          name: name
      properties:
        label:
          $ref: "#/components/schemas/LabelDTO"
        clones:
          items:
            $ref: "#/components/schemas/LabelClonesDTO_clones_inner"
          type: array
      type: object
    NepenthesType:
      enum:
      - Species
      - MultiHybrid
      - PrimaryHybrid
      type: string
      x-enum-varnames:
      - species
      - multihybrid
      - primaryhybrid
    CloneType:
      enum:
      - iv
      - ic
      type: string
      x-enum-varnames:
      - iv
      - ic
    CloneGrexDTO_father:
      oneOf:
      - $ref: "#/components/schemas/CloneDTO"
      - $ref: "#/components/schemas/HybridCloneDTO"
      x-one-of-name: CloneGrexDTOFather
    LabelClonesDTO_clones_inner:
      anyOf:
      - $ref: "#/components/schemas/CloneDTO"
      - $ref: "#/components/schemas/HybridCloneDTO"
