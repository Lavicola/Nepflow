plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.openapi.generator" version "7.0.1"

}

group = 'com.nepflow'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'com.okta.spring', name: 'okta-spring-boot-starter', version: '3.0.6'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webflux-ui', version: '2.2.0'
	implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.0'
	runtimeOnly group: 'com.h2database', name: 'h2', version: '2.2.220'

	compileOnly 'org.projectlombok:lombok'
	compileOnly group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
	compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation(group: 'org.neo4j.test', name: 'neo4j-harness', version: '5.10.0'){
		exclude group: "org.slf4j"
		exclude group: "commons-logging"
	}

	implementation group: 'com.google.guava', name: 'guava', version: '33.1.0-jre'

	annotationProcessor 'org.projectlombok:lombok'


}
task generateOpenAPINepenthesManagement(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	doNotTrackState("")
	generatorName.set("spring")
	def openapiSpecFile = new File(project.rootProject.projectDir, "src/main/java/com/nepflow/NepenthesManagement/openAPI/NepenthesManagementOpenAPI.yaml")
	def openapi_spec = openapiSpecFile.absolutePath
	configOptions.set([
			delegatePattern           : "true",
			useJakartaEe			  : "true",
			globalProperty            : "apis",
			generateApiDocumentation  : "true",
			generateModelTests        : "false",
			generateModelDocumentation: "false",
			generateApiTests          : "false",
			models                    : "false",
			generateModels            : "false",
			useTags					  : "true",
			modelPackage              : "com.nepflow.NepenthesManagement.Dto",
	])
	typeMappings = ['string+date-time': 'LocalDateTime']
	importMappings = ['LocalDateTime'  : 'java.time.LocalDateTime',
					  'ParameterObject': 'org.springdoc.core.annotations.ParameterObject',
	]
	inputSpec.set(openapi_spec)
	outputDir.set(project.rootProject.getProjectDir().getAbsolutePath())
	apiPackage.set("com.nepflow.NepenthesManagement.Controller")
	invokerPackage.set("")

}


task generateOpenAPIUserManagement(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName.set("spring")
	def openapiSpecFile = new File(project.rootProject.projectDir, "src/main/java/com/nepflow/UserManagement/openAPI/UserManagementOpenAPI.yaml")
	def openapi_spec = openapiSpecFile.absolutePath
	configOptions.set([
			delegatePattern           : "true",
			useJakartaEe			  : "true",
			globalProperty            : "apis",
			generateApiDocumentation  : "true",
			generateModelTests        : "false",
			generateModelDocumentation: "false",
			generateApiTests          : "false",
			models                    : "false",
			generateModels            : "false",
			useTags					  : "true",
			modelPackage              : "com.nepflow.UserManagement.Dto",
	])
	typeMappings = ['string+date-time': 'LocalDateTime']
	importMappings = ['LocalDateTime'  : 'java.time.LocalDateTime',
					  'ParameterObject': 'org.springdoc.core.annotations.ParameterObject',
	]
	inputSpec.set(openapi_spec)
	outputDir.set(project.rootProject.getProjectDir().getAbsolutePath())
	apiPackage.set("com.nepflow.UserManagement.Controller")
	invokerPackage.set("")

}

task generateOpenAPIGrowlistManagement(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName.set("spring")
	def openapiSpecFile = new File(project.rootProject.projectDir, "src/main/java/com/nepflow/GrowlistManagement/openAPI/GrowlistManagementOpenAPI.yaml")
	def openapi_spec = openapiSpecFile.absolutePath
	configOptions.set([
			delegatePattern           : "true",
			useJakartaEe			  : "true",
			globalProperty            : "apis",
			generateApiDocumentation  : "true",
			generateModelTests        : "false",
			generateModelDocumentation: "false",
			generateApiTests          : "false",
			models                    : "false",
			generateModels            : "false",
			useTags					  : "true",
			modelPackage              : "com.nepflow.GrowlistManagement.Dto",
	])
	typeMappings = ['string+date-time': 'LocalDateTime']
	importMappings = ['LocalDateTime'  : 'java.time.LocalDateTime',
					  'ParameterObject': 'org.springdoc.core.annotations.ParameterObject',
	]
	inputSpec.set(openapi_spec)
	outputDir.set(project.rootProject.getProjectDir().getAbsolutePath())
	apiPackage.set("com.nepflow.GrowlistManagement.Controller")
	invokerPackage.set("")

}


tasks.named('test') {
	useJUnitPlatform()
}
