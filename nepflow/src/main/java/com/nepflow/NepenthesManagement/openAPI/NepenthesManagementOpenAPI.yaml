openapi: 3.0.0
tags:
  - name: NepenthesManagement
    description: Operations to manage Nepenthes
info:
  title: Nepflow Nepenthes
  description: |-
    API for Nepenthes Operations
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/api

paths:
  /location:
    post:
      summary: add a new Location
      tags:
        - NepenthesMetadata
      requestBody:
        description: LocationdTo with all necessary Attributes
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDTO'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDTO'
        '500':
          description: Internal Error
  /producer:
    post:
      summary: add a new Producer
      tags:
        - NepenthesMetadata
      requestBody:
        description: DTO with all necessary Attributes
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerDTO'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerDTO'
        '500':
          description: Internal Error
  /clone/{nepenthesType}:
    parameters:
      - $ref: "#/components/parameters/nepenthesType"
    get:
      summary: get all Nepenthes of a specific Nepenthestype
      tags:
        - nepenthes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/LabelDTO'
  /clone/{nepenthesType}/{name}:
    parameters:
      - $ref: "#/components/parameters/nepenthesType"
      - $ref: "#/components/parameters/name"

    get:
      summary: get all clones of a Nepenthes
      tags:
        - nepenthes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelClonesDTO'

  /clone/{nepenthesType}/{cloneType}/{name}:
    parameters:
      - $ref: "#/components/parameters/nepenthesType"
      - $ref: "#/components/parameters/cloneType"
      - $ref: "#/components/parameters/name"

    get:
      summary: get either iv or ic clones of a Nepenthes
      tags:
        - nepenthes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelClonesDTO'

    post:
      summary: add a new clone to a nepenthes
      tags:
        - nepenthes
      requestBody:
        description: Clone DTO with new values
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelCloneDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelCloneDTO'

  /clone/{nepenthesType}/{cloneType}/{name}/{internalCloneId}:
    parameters:
      - $ref: "#/components/parameters/nepenthesType"
      - $ref: "#/components/parameters/cloneType"
      - $ref: "#/components/parameters/name"
      - $ref: "#/components/parameters/internalCloneId"

    put:
      summary: update a Clone
      tags:
        - nepenthes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelCloneDTO'
  /growlist/clone/add/{internalCloneId}:
    parameters:
      - $ref: "#/components/parameters/internalCloneId"
    post:
      summary: Add an existing Clone of a Nepenthes to the Growlist.
      tags:
        - Growlistmanagement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecimenCloneDTO'
        '500':
          description: Error, could not add Specimen to user
  /growlist/clone/create/{cloneType}:
    parameters:
      - $ref: "#/components/parameters/cloneType"
    post:
      summary: Create a new IV or IC Clone and Add it to the Growlist
      tags:
        - Growlistmanagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelCloneDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecimenCloneDTO'
        '500':
          description: Error, could not add Specimen to user

  /growlist/clones/{specimenId}:
    parameters:
      - $ref: "#/components/parameters/specimenId"
    delete:
      summary: remove a clone from the growlisti If the removed plant was already used for a trade it will be a soft delete in the relation part
      tags:
        - Growlistmanagement
      responses:
        '200':
          description: OK
        '500':
          description: Error, could not add Nepenthes Clone to user
    put:
      summary: update values
      tags:
        - Growlistmanagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelSpecimenDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelSpecimenDTO'
        '500':
          description: Could not update Specimen

  /growlist/{username}/clones:
    parameters:
      - $ref: "#/components/parameters/username"

    get:
      summary: get Nepenthes of a specific User
      tags:
        - Growlistmanagement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrowlistDTO'

        '404':
          description: Error, User not found




components:

  parameters:
    nepenthesType:
      name: nepenthesType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/NepenthesType'
    cloneType:
      name: cloneType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CloneType'
    name:
      name: name
      in: path
      required: true
      schema:
        type: string

    internalCloneId:
      name: internalCloneId
      in: path
      required: true
      schema:
        type: string

    username:
      name: username
      in: path
      required: true
      schema:
        type: string

    specimenId:
      name: specimenId
      in: path
      required: true
      schema:
        type: string



  schemas:

    LocationDTO:
      type: string

    ProducerDTO:
      type: string

    # abstraction of Hybrid/Nepenthes etc.
    LabelDTO:
      type: object
      properties:
        name:
          type: string
        prefix:
          type: string


    CloneDTO:
      type: object
      properties:
        cloneId:
          type: string
        internalCloneId:
          type: string
        sex:
          type: string
        description:
          type: string
        nickname:
          type: string
        producer:
          $ref: '#/components/schemas/ProducerDTO'
        Location:
          $ref: '#/components/schemas/LocationDTO'

    LabelCloneDTO:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/LabelDTO'
        clone:
          $ref: '#/components/schemas/CloneDTO'


    LabelClonesDTO:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/LabelDTO'
        clones:
          type: array
          items:
            $ref: '#/components/schemas/CloneDTO'

    SpecimenCloneDTO:
      allOf:
        - $ref: '#/components/schemas/CloneDTO'
        - type: object
          properties:
            specimenId:
              type: string

    LabelSpecimenDTO:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/LabelDTO'
        clone:
          $ref: '#/components/schemas/SpecimenCloneDTO'

    GrowlistDTO:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        specimens:
          type: array
          items:
            $ref: '#/components/schemas/LabelSpecimenDTO'

    # since Spring boot open api generator does not generate allowed Values
    NepenthesType:
      type: string
      enum:
        - Species
        - MultiHybrid
        - PrimaryHybrid
      x-enum-varnames:
        - species
        - multihybrid
        - primaryhybrid
      x-enumNames:
        - species
        - multihybrid
        - primaryhybrid



    CloneType:
      type: string
      enum: &CloneType
        - iv
        - ic
      x-enum-varnames: *CloneType
      x-enumNames:
        - iv
        - ic













